services:
  db:
    image: postgres:17-alpine
    restart: always
    container_name: db-prisma
    ports:
      - '5433:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    environment:
      - POSTGRES_USER=/run/secrets/POSTGRES_USER
      - POSTGRES_PASSWORD=/run/secrets/POSTGRES_PASSWORD
      - POSTGRES_DB=/run/secrets/POSTGRES_DB

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: server-api
    ports:
      - "5000:5000"
      - "5555:5555"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - prisma-engines:/usr/src/app/node_modules/@prisma/engines
      - ./apps/api/prisma:/usr/src/app/prisma
      - ./apps/api:/usr/src/app  # Memastikan seluruh source code di-mount
    command: npm run dev
    secrets:
      - DATABASE_URL
      - JWT_SECRET
      - REFRESH_JWT_SECRET
    environment:
      - DATABASE_URL=/run/secrets/DATABASE_URL
      - JWT_SECRET=/run/secrets/JWT_SECRET
      - REFRESH_JWT_SECRET=/run/secrets/REFRESH_JWT_SECRET
      - PORT=5000
      - NODE_ENV=development
      - JWT_EXPIRES_IN=1d
      - REFRESH_JWT_EXPIRES_IN=7d

volumes:
  postgres-data:
  prisma-engines:

secrets:
  POSTGRES_USER:
    external: true
  POSTGRES_PASSWORD:
    external: true
  POSTGRES_DB:
    external: true
  DATABASE_URL:
    external: true
  JWT_SECRET:
    external: true
  REFRESH_JWT_SECRET:
    external: true